name: Build and Push Docker Image

on:
  push:
    tags:
      - v*.*.*  # 仅在版本标签推送时触发，例如 v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 步骤 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: |
          version=$(git describe --tags --always --match 'v*' | sed -n 's|^v\([0-9]*\.[0-9]*\.[0-9]*\)\(-.*\)\{0,1\}|\1|p')
          echo "version=$version" >> $GITHUB_ENV  # Store version as an environment variable

      # 步骤 3: 登录到 Docker Hub（你需要在仓库的 Secrets 中设置这些凭据）
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 步骤 4: 构建 Docker 镜像
      - name: Build&Push DDNS image
        run: |
          cd ddns
          docker build -t dingdangdog/cfddns:ddns_${{ env.version }} .
          docker push dingdangdog/cfddns:ddns_${{ env.version }}
        
      # 步骤 5: 推送 Docker 镜像
      - name: Push&Push whoisme image
        run: |
          cd ip
          docker build -t dingdangdog/cfddns:whoisme_${{ env.version }} .
          docker push dingdangdog/cfddns:whoisme_${{ env.version }}

      # 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 构建 arm64 镜像并推送
      - name: Build&Push DDNS arm64 image
        run: |
          docker buildx build \
            --platform linux/arm64 \
            --tag dingdangdog/cfddns:ddns_${{ env.version }}_arm64 \
            --push .

      # 构建 arm64 镜像并推送
      - name: Build&Push whoisme arm64 image
        run: |
          docker buildx build \
            --platform linux/arm64 \
            --tag dingdangdog/cfddns:whoisme_${{ env.version }}_arm64 \
            --push .

      - name: Clean up Docker images
        run: docker system prune -af
