name: Build and Push Docker Image

on:
  push:
    tags:
      - v*.*.* # 仅在版本标签推送时触发，例如 v1.0.0

jobs:
  build:
    environment: docker
    runs-on: ubuntu-latest

    steps:
      # 步骤 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 步骤 2: 登录到 Docker Hub（你需要在仓库的 Secrets 中设置这些凭据）
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 步骤 3: 获取版本号
      - name: Get version
        id: get_version
        run: |
          version=$(git describe --tags --always --match 'v*' | sed -n 's|^v\([0-9]*\.[0-9]*\.[0-9]*\)\(-.*\)\{0,1\}|\1|p')
          echo "version=$version" >> $GITHUB_ENV  # Store version as an environment variable

      # 步骤 4: 构建并推送 ddns 镜像
      - name: Build & Push DDNS image
        run: |
          cd ddns
          docker build -t dingdangdog/cfddns:ddns_${{ env.version }} .
          docker push dingdangdog/cfddns:ddns_${{ env.version }}

      # 步骤 5: 构建并推送 whoiam 镜像
      - name: Build & Push whoiam image
        run: |
          cd whoiam
          docker build -t dingdangdog/cfddns:whoiam_${{ env.version }} .
          docker push dingdangdog/cfddns:whoiam_${{ env.version }}

      # 步骤 6: 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 步骤 7: 构建并推送 arm64 ddns 镜像
      - name: Build & Push DDNS arm64 image
        run: |
          cd ddns
          docker buildx build \
            --platform linux/arm64 \
            --tag dingdangdog/cfddns:ddns_${{ env.version }}_arm64 \
            --push .

      # 步骤 8: 构建并推送 arm64 whoiam 镜像
      - name: Build & Push whoiam arm64 image
        run: |
          cd whoiam
          docker buildx build \
            --platform linux/arm64 \
            --tag dingdangdog/cfddns:whoiam_${{ env.version }}_arm64 \
            --push .

      # 步骤 9: 清理 Docker 镜像
      - name: Clean up Docker images
        run: docker system prune -af
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          name: 🎉Release ${{ env.version }}
          tag_name: v${{ env.version }}
          append_body: true
          body: Release Docker-v${{ env.version }}
